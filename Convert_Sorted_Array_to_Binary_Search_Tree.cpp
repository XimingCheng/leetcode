/** * Definition for binary tree * struct TreeNode { *     int val; *     TreeNode *left; *     TreeNode *right; *     TreeNode(int x) : val(x), left(NULL), right(NULL) {} * }; */class Solution {public:    TreeNode *sortedArrayToBST(vector<int> &num) {        // IMPORTANT: Please reset any member data you declared, as        // the same Solution instance will be reused for each test case.        if(num.size() == 0) return NULL;        auto beg = num.begin(), end = num.end();        if(beg < end) {            if(beg == end - 1) {                TreeNode* root = new TreeNode(*beg);                return root;            }            int mid = num.size()/2;            TreeNode* root = new TreeNode(*(beg + mid));            vector<int> left, right;            copy(beg, beg + mid, back_inserter(left));            copy(beg + mid + 1, end, back_inserter(right));            root->left = sortedArrayToBST(left);            root->right = sortedArrayToBST(right);            return root;        }    }};