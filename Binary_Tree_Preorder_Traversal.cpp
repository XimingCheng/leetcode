/** * Definition for binary tree * struct TreeNode { *     int val; *     TreeNode *left; *     TreeNode *right; *     TreeNode(int x) : val(x), left(NULL), right(NULL) {} * }; */class Solution {public:    vector<int> preorderTraversal(TreeNode *root) {        // IMPORTANT: Please reset any member data you declared, as        // the same Solution instance will be reused for each test case.        vector<int> data;        if(!root) return data;        stack<TreeNode *> miniStack;        miniStack.push(root);        while(miniStack.size() > 0) {            TreeNode *n = miniStack.top();            miniStack.pop();            data.push_back(n->val);            if(n->right) miniStack.push(n->right);            if(n->left) miniStack.push(n->left);        }        return data;    }};